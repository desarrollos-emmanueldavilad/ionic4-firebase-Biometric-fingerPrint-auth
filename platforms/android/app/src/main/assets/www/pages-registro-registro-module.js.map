{"version":3,"sources":["webpack:///./src/app/pages/registro/registro.module.ts","webpack:///./src/app/pages/registro/registro.page.html","webpack:///./src/app/pages/registro/registro.page.scss","webpack:///./src/app/pages/registro/registro.page.ts","webpack:///./src/app/validators/password.validator.ts"],"names":[],"mappings":"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","file":"pages-registro-registro-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegistroPage } from './registro.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegistroPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegistroPage]\r\n})\r\nexport class RegistroPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>registro</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <div text-center=\\\"\\\">\\r\\n        <h5>Registro de Inquilinos</h5>\\r\\n      </div>\\r\\n\\r\\n      <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"tryRegister(validations_form.value)\\\">\\r\\n\\r\\n      <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"ion-color-dark\\\">Correo Electronico</ion-label>\\r\\n            <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                   *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n      \\r\\n      \\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"ion-color-dark\\\">Contraseña</ion-label>\\r\\n            <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                   *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"ion-color-dark\\\">Confirmar Contraseña</ion-label>\\r\\n            <ion-input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validation_messages.confirmPassword\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                   *ngIf=\\\"validations_form.get('confirmPassword').hasError(validation.type) && (validations_form.get('confirmPassword').dirty || validations_form.get('confirmPassword').touched)\\\">\\r\\n                <label class=\\\"error-message\\\">{{validation.message}}</label><br/>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n      \\r\\n          <ion-grid>\\r\\n            <ion-row>\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                <div class=\\\"inner-wrapper\\\">\\r\\n                  <ion-label class=\\\"label label-ios\\\">\\r\\n                    <ion-checkbox class=\\\"check\\\" formControlName=\\\"check\\\" color=\\\"primary\\\" checked=\\\"false\\\"></ion-checkbox>\\r\\n                    <p class=\\\"terminos\\\"> Haciendo click aquì acepto los terminos y condicione.</p>\\r\\n      \\r\\n                  </ion-label>\\r\\n                </div>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n      \\r\\n          </ion-grid>\\r\\n          <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">Registrar\\r\\n          </ion-button>\\r\\n          <label class=\\\"error-message\\\">{{errorMessage}}</label>\\r\\n          <label class=\\\"success-message\\\">{{successMessage}}</label>\\r\\n        </form>\\r\\n        <p class=\\\"go-to-login\\\">Ya tienes una Cuenta? <a (click)=\\\"goLoginPage()\\\">Iniciar Sesión.</a></p>\\r\\n\\r\\n    \\r\\n\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdHJvL3JlZ2lzdHJvLnBhZ2Uuc2NzcyJ9 */\"","import { FirebaseService } from './../../services/firebase.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {Validators, FormBuilder, FormGroup, FormControl, AbstractControl} from '@angular/forms';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport { PasswordValidator } from 'src/app/validators/password.validator';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\r\nimport { CompletarRegistroService } from 'src/app/services/completar-registro.service';\r\nimport { TouchIdService } from 'src/app/services/touch-id.service';\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.page.html',\r\n  styleUrls: ['./registro.page.scss'],\r\n})\r\nexport class RegistroPage implements OnInit {\r\n\r\n\r\n  validations_form: FormGroup;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  image: any;\r\n\r\n  validation_messages = {\r\n    'email': [\r\n      {type: 'required', message: 'Correo requerido.'},\r\n      {type: 'pattern', message: 'Correo inválido.'}\r\n    ],\r\n    'password': [\r\n      {type: 'required', message: 'Contraseña requerida.'},\r\n      {type: 'minlength', message: 'Debe tener más de 5 dígitos.'}\r\n    ],\r\n    'confirmPassword': [\r\n      {type: 'required', message: 'Contraseña requerida.'},\r\n      {type: 'minlength', message: 'Debe tener más de 5 dígitos.'},\r\n      {type: 'notMatch', message: 'Las contraseñas deben ser iguales.'}\r\n    ]\r\n  };\r\n  addedData: any;\r\n  datoGuardado: any;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private camera: Camera,\r\n    private finger: TouchIdService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.validations_form = this.formBuilder.group({\r\n        email: new FormControl('', Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n        ])),\r\n        password: new FormControl('', Validators.compose([\r\n          Validators.minLength(5),\r\n          Validators.required\r\n        ])),\r\n        confirmPassword: new FormControl('', Validators.compose([\r\n          Validators.minLength(5),\r\n          Validators.required,\r\n          PasswordValidator.MatchPassword\r\n        ])),\r\n        check: new FormControl('', Validators.required),\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  saveData(form) {\r\n    this.finger.available()\r\n      .then(data => {\r\n        this.validations_form = form;\r\n        this.finger.add(form.value.name, form.value.data, true)\r\n          .then(data => {\r\n            console.log('data gu', data)\r\n            this.addedData = data;\r\n            alert('Tu información se ha guardado correctamente');\r\n            this.validations_form.reset();\r\n          })\r\n          .catch(err => console.error('Se ha producido un error al guardar la información', err));\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  get(key: string) {\r\n    this.finger.verify(key)\r\n      .then(datos => {\r\n        this.datoGuardado = datos;\r\n        console.log(`La información guardada es: ${this.datoGuardado}`);\r\n      })\r\n      .catch(err => {\r\n        console.error(`Se ha producido un error al consultar la información guardada: ${err}`);\r\n      });\r\n  }\r\n\r\n  clear(key: string) {\r\n    this.finger.remove(key)\r\n      .then(datos => {\r\n        console.log('Datos eliminados:', datos);\r\n        alert('Los datos se han eliminado');\r\n      })\r\n      .catch(err => console.error('Se ha producido un error al eliminar la información guardada', err));\r\n  }\r\n\r\n  tryRegister(value){\r\n    this.authService.doRegister(value)\r\n     .then(res => {\r\n       if(this.finger.available()){\r\n        this.finger.add(value.email, value.password, true)\r\n        .then(data => {\r\n          this.addedData = data;\r\n          alert('Tu información se ha guardado correctamente');\r\n          this.validations_form.reset();\r\n        })\r\n        .catch(err => console.error('Se ha producido un error al guardar la información', err));;\r\n       }\r\n       console.log(res);\r\n       this.errorMessage = \"Ocurrio un error al crear tu cuenta\";\r\n       this.successMessage = \"Tu Cuenta fue creada..\";\r\n       this.validations_form.reset();\r\n       this.router.navigate(['/completar-registro'])\r\n     }, err => {\r\n       console.log(err);\r\n       this.errorMessage = err.message;\r\n       this.successMessage = \"La contraseña o el correo no son correctos\";\r\n     })\r\n  }\r\n\r\n  goLoginPage(){\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n\r\n  getPicture(){\r\n    let options: CameraOptions = {\r\n      destinationType: this.camera.DestinationType.DATA_URL,\r\n      targetWidth: 1000,\r\n      targetHeight: 1000,\r\n      quality: 100\r\n    }\r\n    this.camera.getPicture( options )\r\n    .then(imageData => {\r\n      this.image = `data:image/jpeg;base64,${imageData}`;\r\n    })\r\n    .catch(error =>{\r\n      console.error( error );\r\n    });\r\n  }\r\n}\r\n","import {AbstractControl, FormControl} from '@angular/forms';\r\n\r\n\r\nexport class PasswordValidator {\r\n\r\n  static MatchPassword(AC: AbstractControl): { [key: string]: boolean } | null {\r\n    const password = AC && AC.parent && AC.parent.controls['password'].value;\r\n    const confirmPassword = AC && AC.value;\r\n    if (password === confirmPassword) {\r\n      return null;\r\n    } else {\r\n      return ({'notMatch': true});\r\n    }\r\n  }\r\n}"],"sourceRoot":""}